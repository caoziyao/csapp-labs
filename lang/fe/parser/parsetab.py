
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftPLUSMINUSleftTIMESDIVIDErightUMINUSCALL COMMENT DEF DIVIDE DOUBLE_EQUAL ELSE EQUAL FALSE ID IF IS_LESS_THEN IS_MORE_THEN LPAREN L_BRACE MINUS NUMBER PLUS PRINT RPAREN R_BRACE SEMICOLON STRING THEN TIMES TRUE VAR WHILE l_square_bracket r_square_bracketexpression : IF LPAREN expression RPAREN L_BRACE expression R_BRACE ELSE L_BRACE expression R_BRACEexpression : l_square_bracket  r_square_bracketexpression : ID l_square_bracket NUMBER r_square_bracketexpression : IF LPAREN expression RPAREN L_BRACE expression R_BRACEexpression : DEF func_name LPAREN  RPAREN L_BRACE expression R_BRACEexpression : expression SEMICOLONfunc_name : IDexpression : expression expressionexpression : DEF func_name LPAREN ID RPAREN L_BRACE expression R_BRACEexpression : ID EQUAL expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n\n    expression : '-' expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID"
    
_lr_action_items = {'IF':([0,1,3,5,6,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,33,36,37,39,40,41,42,43,44,46,47,48,49,],[2,2,2,-18,-17,2,2,-6,2,2,2,2,2,2,-2,2,-15,-11,-12,-13,-14,2,-16,2,-3,2,2,2,2,2,-4,-5,2,-9,2,2,-1,]),'l_square_bracket':([0,1,3,5,6,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,33,36,37,39,40,41,42,43,44,46,47,48,49,],[4,4,4,18,-17,4,4,-6,4,4,4,4,4,4,-2,4,-15,-11,-12,-13,-14,4,-16,4,-3,4,4,4,4,4,-4,-5,4,-9,4,4,-1,]),'ID':([0,1,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,31,33,36,37,39,40,41,42,43,44,46,47,48,49,],[5,5,5,-18,-17,21,5,5,-6,5,5,5,5,5,5,-2,5,-15,-11,-12,-13,-14,5,-16,5,35,-3,5,5,5,5,5,-4,-5,5,-9,5,5,-1,]),'DEF':([0,1,3,5,6,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,33,36,37,39,40,41,42,43,44,46,47,48,49,],[7,7,7,-18,-17,7,7,-6,7,7,7,7,7,7,-2,7,-15,-11,-12,-13,-14,7,-16,7,-3,7,7,7,7,7,-4,-5,7,-9,7,7,-1,]),'-':([0,1,3,5,6,8,9,10,11,12,13,14,15,16,17,19,22,23,24,25,26,27,28,30,33,36,37,39,40,41,42,43,44,46,47,48,49,],[8,8,8,-18,-17,8,8,-6,8,8,8,8,8,8,-2,8,-15,-11,-12,-13,-14,8,-16,8,-3,8,8,8,8,8,-4,-5,8,-9,8,8,-1,]),'LPAREN':([0,1,2,3,5,6,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,30,33,36,37,39,40,41,42,43,44,46,47,48,49,],[3,3,15,3,-18,-17,3,3,-6,3,3,3,3,3,3,-2,3,31,-7,-15,-11,-12,-13,-14,3,-16,3,-3,3,3,3,3,3,-4,-5,3,-9,3,3,-1,]),'NUMBER':([0,1,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,30,33,36,37,39,40,41,42,43,44,46,47,48,49,],[6,6,6,-18,-17,6,6,-6,6,6,6,6,6,6,-2,29,6,-15,-11,-12,-13,-14,6,-16,6,-3,6,6,6,6,6,-4,-5,6,-9,6,6,-1,]),'$end':([1,5,6,9,10,17,22,23,24,25,26,28,30,33,42,43,46,49,],[0,-18,-17,-8,-6,-2,-15,-11,-12,-13,-14,-16,-10,-3,-4,-5,-9,-1,]),'SEMICOLON':([1,5,6,9,10,16,17,22,23,24,25,26,27,28,30,33,39,40,42,43,44,46,48,49,],[10,-18,-17,10,-6,10,-2,-15,-11,-12,-13,-14,10,-16,10,-3,10,10,-4,-5,10,-9,10,-1,]),'PLUS':([1,5,6,9,10,16,17,22,23,24,25,26,27,28,30,33,39,40,42,43,44,46,48,49,],[11,-18,-17,11,-6,11,-2,-15,-11,-12,-13,-14,11,-16,11,-3,11,11,-4,-5,11,-9,11,-1,]),'MINUS':([1,5,6,9,10,16,17,22,23,24,25,26,27,28,30,33,39,40,42,43,44,46,48,49,],[12,-18,-17,12,-6,12,-2,-15,-11,-12,-13,-14,12,-16,12,-3,12,12,-4,-5,12,-9,12,-1,]),'TIMES':([1,5,6,9,10,16,17,22,23,24,25,26,27,28,30,33,39,40,42,43,44,46,48,49,],[13,-18,-17,13,-6,13,-2,-15,13,13,-13,-14,13,-16,13,-3,13,13,-4,-5,13,-9,13,-1,]),'DIVIDE':([1,5,6,9,10,16,17,22,23,24,25,26,27,28,30,33,39,40,42,43,44,46,48,49,],[14,-18,-17,14,-6,14,-2,-15,14,14,-13,-14,14,-16,14,-3,14,14,-4,-5,14,-9,14,-1,]),'r_square_bracket':([4,29,],[17,33,]),'EQUAL':([5,],[19,]),'RPAREN':([5,6,9,10,16,17,22,23,24,25,26,27,28,30,31,33,35,42,43,46,49,],[-18,-17,-8,-6,28,-2,-15,-11,-12,-13,-14,32,-16,-10,34,-3,38,-4,-5,-9,-1,]),'R_BRACE':([5,6,9,10,17,22,23,24,25,26,28,30,33,39,40,42,43,44,46,48,49,],[-18,-17,-8,-6,-2,-15,-11,-12,-13,-14,-16,-10,-3,42,43,-4,-5,46,-9,49,-1,]),'L_BRACE':([32,34,38,45,],[36,37,41,47,]),'ELSE':([42,],[45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,3,8,9,11,12,13,14,15,16,19,22,23,24,25,26,27,30,36,37,39,40,41,44,47,48,],[1,9,16,22,9,23,24,25,26,27,9,30,9,9,9,9,9,9,9,39,40,9,9,44,9,48,9,]),'func_name':([7,],[20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> IF LPAREN expression RPAREN L_BRACE expression R_BRACE ELSE L_BRACE expression R_BRACE','expression',11,'p_condition_if','parse_if.py',7),
  ('expression -> l_square_bracket r_square_bracket','expression',2,'p_array_declar','parse_array.py',9),
  ('expression -> ID l_square_bracket NUMBER r_square_bracket','expression',4,'p_array_access','parse_array.py',15),
  ('expression -> IF LPAREN expression RPAREN L_BRACE expression R_BRACE','expression',7,'p_condition_if_else','parse_if.py',16),
  ('expression -> DEF func_name LPAREN RPAREN L_BRACE expression R_BRACE','expression',7,'p_def','parse_func.py',18),
  ('expression -> expression SEMICOLON','expression',2,'p_statement_expr','parse_calc.py',21),
  ('func_name -> ID','func_name',1,'p_def_funcname','parse_func.py',27),
  ('expression -> expression expression','expression',2,'p_statement_list_2','parse_calc.py',31),
  ('expression -> DEF func_name LPAREN ID RPAREN L_BRACE expression R_BRACE','expression',8,'p_def_arg','parse_func.py',32),
  ('expression -> ID EQUAL expression','expression',3,'p_statement_assign','parse_calc.py',47),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parse_calc.py',52),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parse_calc.py',53),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parse_calc.py',54),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parse_calc.py',55),
  ('expression -> - expression','expression',2,'p_expression_uminus','parse_calc.py',71),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parse_calc.py',76),
  ('expression -> NUMBER','expression',1,'p_expression_number','parse_calc.py',81),
  ('expression -> ID','expression',1,'p_expression_name','parse_calc.py',86),
]
