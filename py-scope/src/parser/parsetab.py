
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE DOUBLE_EQUAL ELSE EQUAL FALSE ID IF IS_LESS_THEN IS_MORE_THEN LPAREN L_BRACE MINUS NUMBER PLUS PRINT RPAREN R_BRACE STRING THEN TIMES TRUE VAR WHILEstatement : print expressionstatement_list : statementstatement : IF LPAREN expression RPAREN L_BRACE statement_list R_BRACE ELSE L_BRACE statement_list R_BRACEprint : PRINTstatement_list : statement_list statement\n    expression : expression IS_MORE_THEN expression\n               | expression IS_LESS_THEN expression\n    expression : STRINGstatement : ID EQUAL expressionstatement : VAR ID EQUAL expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : '-' expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : ID"
    
_lr_action_items = {'IF':([0,3,6,9,11,12,13,24,25,26,27,28,29,30,32,33,36,37,38,39,41,43,44,45,],[4,-11,-19,-8,-18,-1,-19,-16,-6,-7,-12,-13,-14,-15,-17,-9,-10,4,4,-2,-5,4,4,-3,]),'ID':([0,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,32,33,34,36,37,38,39,41,43,44,45,],[6,13,-11,13,-19,23,-4,-8,13,-18,-1,-19,13,13,13,13,13,13,13,13,-16,-6,-7,-12,-13,-14,-15,-17,-9,13,-10,6,6,-2,-5,6,6,-3,]),'VAR':([0,3,6,9,11,12,13,24,25,26,27,28,29,30,32,33,36,37,38,39,41,43,44,45,],[7,-11,-19,-8,-18,-1,-19,-16,-6,-7,-12,-13,-14,-15,-17,-9,-10,7,7,-2,-5,7,7,-3,]),'PRINT':([0,3,6,9,11,12,13,24,25,26,27,28,29,30,32,33,36,37,38,39,41,43,44,45,],[8,-11,-19,-8,-18,-1,-19,-16,-6,-7,-12,-13,-14,-15,-17,-9,-10,8,8,-2,-5,8,8,-3,]),'STRING':([0,2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,32,33,34,36,37,38,39,41,43,44,45,],[9,9,-11,9,-19,-4,-8,9,-18,-1,-19,9,9,9,9,9,9,9,9,-16,-6,-7,-12,-13,-14,-15,-17,-9,9,-10,9,9,-2,-5,9,9,-3,]),'-':([0,2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,32,33,34,36,37,38,39,41,43,44,45,],[10,10,-11,10,-19,-4,-8,10,-18,-1,-19,10,10,10,10,10,10,10,10,-16,-6,-7,-12,-13,-14,-15,-17,-9,10,-10,10,10,-2,-5,10,10,-3,]),'LPAREN':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,32,33,34,36,37,38,39,41,43,44,45,],[5,5,-11,20,5,-19,-4,-8,5,-18,-1,-19,5,5,5,5,5,5,5,5,-16,-6,-7,-12,-13,-14,-15,-17,-9,5,-10,5,5,-2,-5,5,5,-3,]),'NUMBER':([0,2,3,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,24,25,26,27,28,29,30,32,33,34,36,37,38,39,41,43,44,45,],[11,11,-11,11,-19,-4,-8,11,-18,-1,-19,11,11,11,11,11,11,11,11,-16,-6,-7,-12,-13,-14,-15,-17,-9,11,-10,11,11,-2,-5,11,11,-3,]),'$end':([1,3,6,9,11,12,13,24,25,26,27,28,29,30,32,33,36,45,],[0,-11,-19,-8,-18,-1,-19,-16,-6,-7,-12,-13,-14,-15,-17,-9,-10,-3,]),'R_BRACE':([3,6,9,11,12,13,24,25,26,27,28,29,30,32,33,36,38,39,41,44,45,],[-11,-19,-8,-18,-1,-19,-16,-6,-7,-12,-13,-14,-15,-17,-9,-10,40,-2,-5,45,-3,]),'IS_MORE_THEN':([3,6,9,11,12,13,21,24,25,26,27,28,29,30,31,32,33,36,],[14,-19,-8,-18,14,-19,14,-16,14,14,-12,-13,-14,-15,14,-17,14,14,]),'IS_LESS_THEN':([3,6,9,11,12,13,21,24,25,26,27,28,29,30,31,32,33,36,],[15,-19,-8,-18,15,-19,15,-16,15,15,-12,-13,-14,-15,15,-17,15,15,]),'PLUS':([3,6,9,11,12,13,21,24,25,26,27,28,29,30,31,32,33,36,],[16,-19,-8,-18,16,-19,16,-16,16,16,-12,-13,-14,-15,16,-17,16,16,]),'MINUS':([3,6,9,11,12,13,21,24,25,26,27,28,29,30,31,32,33,36,],[17,-19,-8,-18,17,-19,17,-16,17,17,-12,-13,-14,-15,17,-17,17,17,]),'TIMES':([3,6,9,11,12,13,21,24,25,26,27,28,29,30,31,32,33,36,],[18,-19,-8,-18,18,-19,18,-16,18,18,18,18,-14,-15,18,-17,18,18,]),'DIVIDE':([3,6,9,11,12,13,21,24,25,26,27,28,29,30,31,32,33,36,],[19,-19,-8,-18,19,-19,19,-16,19,19,19,19,-14,-15,19,-17,19,19,]),'EQUAL':([6,23,],[22,34,]),'RPAREN':([9,11,13,21,24,25,26,27,28,29,30,31,32,],[-8,-18,-19,32,-16,-6,-7,-12,-13,-14,-15,35,-17,]),'L_BRACE':([35,42,],[37,43,]),'ELSE':([40,],[42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,37,38,43,44,],[1,39,41,39,41,]),'print':([0,37,38,43,44,],[2,2,2,2,2,]),'expression':([0,2,5,10,14,15,16,17,18,19,20,22,34,37,38,43,44,],[3,12,21,24,25,26,27,28,29,30,31,33,36,3,3,3,3,]),'statement_list':([37,43,],[38,44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> print expression','statement',2,'p_print','parse_print.py',17),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','parse_statement.py',17),
  ('statement -> IF LPAREN expression RPAREN L_BRACE statement_list R_BRACE ELSE L_BRACE statement_list R_BRACE','statement',11,'p_condition_if','parse_condition.py',18),
  ('print -> PRINT','print',1,'p_print_print','parse_print.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','parse_statement.py',22),
  ('expression -> expression IS_MORE_THEN expression','expression',3,'p_condition_conf','parse_condition.py',27),
  ('expression -> expression IS_LESS_THEN expression','expression',3,'p_condition_conf','parse_condition.py',28),
  ('expression -> STRING','expression',1,'p_print_value','parse_print.py',27),
  ('statement -> ID EQUAL expression','statement',3,'p_statement_assign','parse_calc.py',29),
  ('statement -> VAR ID EQUAL expression','statement',4,'p_statement_var_assign','parse_calc.py',35),
  ('statement -> expression','statement',1,'p_statement_expr','parse_calc.py',41),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parse_calc.py',46),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parse_calc.py',47),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parse_calc.py',48),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parse_calc.py',49),
  ('expression -> - expression','expression',2,'p_expression_uminus','parse_calc.py',61),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parse_calc.py',66),
  ('expression -> NUMBER','expression',1,'p_expression_number','parse_calc.py',71),
  ('expression -> ID','expression',1,'p_expression_name','parse_calc.py',76),
]
