
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DIVIDE DOUBLE_EQUAL ELSE EQUAL FALSE ID IF IS_LESS_THEN IS_MORE_THEN LPAREN L_BRACE MINUS NUMBER PLUS PRINT RPAREN R_BRACE STRING THEN TIMES TRUE VAR WHILEexpression : expression PLUS termexpression : IF LPAREN expression RPAREN L_BRACE expression R_BRACE ELSE L_BRACE expression R_BRACEexpression : VAR IDexpression : expression MINUS termexpression : VAR ID EQUAL expressionexpression : term\n    expression : expression IS_MORE_THEN expression\n               | expression IS_LESS_THEN expression\n    term : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERexpression : print valuefactor : ID\n    print : PRINTvalue : STRINGfactor : TRUE\n              | FALSE\n    value : IDvalue : NUMBERfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'IF':([0,4,15,16,19,34,37,41,],[3,3,3,3,3,3,3,3,]),'VAR':([0,4,15,16,19,34,37,41,],[5,5,5,5,5,5,5,5,]),'PRINT':([0,4,15,16,19,34,37,41,],[9,9,9,9,9,9,9,9,]),'NUMBER':([0,4,7,9,13,14,15,16,17,18,19,34,37,41,],[10,10,25,-15,10,10,10,10,10,10,10,10,10,10,]),'ID':([0,4,5,7,9,13,14,15,16,17,18,19,34,37,41,],[6,6,21,24,-15,6,6,6,6,6,6,6,6,6,6,]),'TRUE':([0,4,13,14,15,16,17,18,19,34,37,41,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'FALSE':([0,4,13,14,15,16,17,18,19,34,37,41,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'LPAREN':([0,3,4,13,14,15,16,17,18,19,34,37,41,],[4,19,4,4,4,4,4,4,4,4,4,4,4,]),'$end':([1,2,6,8,10,11,12,21,22,23,24,25,26,27,28,29,30,31,33,36,43,],[0,-6,-14,-11,-12,-17,-18,-3,-13,-16,-19,-20,-1,-4,-7,-8,-9,-10,-21,-5,-2,]),'PLUS':([1,2,6,8,10,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,42,43,],[13,-6,-14,-11,-12,-17,-18,13,-3,-13,-16,-19,-20,-1,-4,13,13,-9,-10,13,-21,13,13,13,-2,]),'MINUS':([1,2,6,8,10,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,42,43,],[14,-6,-14,-11,-12,-17,-18,14,-3,-13,-16,-19,-20,-1,-4,14,14,-9,-10,14,-21,14,14,14,-2,]),'IS_MORE_THEN':([1,2,6,8,10,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,42,43,],[15,-6,-14,-11,-12,-17,-18,15,-3,-13,-16,-19,-20,-1,-4,15,15,-9,-10,15,-21,15,15,15,-2,]),'IS_LESS_THEN':([1,2,6,8,10,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,38,42,43,],[16,-6,-14,-11,-12,-17,-18,16,-3,-13,-16,-19,-20,-1,-4,16,16,-9,-10,16,-21,16,16,16,-2,]),'RPAREN':([2,6,8,10,11,12,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,43,],[-6,-14,-11,-12,-17,-18,33,-3,-13,-16,-19,-20,-1,-4,-7,-8,-9,-10,35,-21,-5,-2,]),'R_BRACE':([2,6,8,10,11,12,21,22,23,24,25,26,27,28,29,30,31,33,36,38,42,43,],[-6,-14,-11,-12,-17,-18,-3,-13,-16,-19,-20,-1,-4,-7,-8,-9,-10,-21,-5,39,43,-2,]),'TIMES':([2,6,8,10,11,12,26,27,30,31,33,],[17,-14,-11,-12,-17,-18,17,17,-9,-10,-21,]),'DIVIDE':([2,6,8,10,11,12,26,27,30,31,33,],[18,-14,-11,-12,-17,-18,18,18,-9,-10,-21,]),'STRING':([7,9,],[23,-15,]),'EQUAL':([21,],[34,]),'L_BRACE':([35,40,],[37,41,]),'ELSE':([39,],[40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,15,16,19,34,37,41,],[1,20,28,29,32,36,38,42,]),'term':([0,4,13,14,15,16,19,34,37,41,],[2,2,26,27,2,2,2,2,2,2,]),'print':([0,4,15,16,19,34,37,41,],[7,7,7,7,7,7,7,7,]),'factor':([0,4,13,14,15,16,17,18,19,34,37,41,],[8,8,8,8,8,8,30,31,8,8,8,8,]),'value':([7,],[22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parse_calculation.py',14),
  ('expression -> IF LPAREN expression RPAREN L_BRACE expression R_BRACE ELSE L_BRACE expression R_BRACE','expression',11,'p_condition_if','parse_condition.py',18),
  ('expression -> VAR ID','expression',2,'p_assignment_var','parse_assignment.py',19),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parse_calculation.py',19),
  ('expression -> VAR ID EQUAL expression','expression',4,'p_assignment_var_equal','parse_assignment.py',24),
  ('expression -> term','expression',1,'p_expression_term','parse_calculation.py',24),
  ('expression -> expression IS_MORE_THEN expression','expression',3,'p_condition_conf','parse_condition.py',27),
  ('expression -> expression IS_LESS_THEN expression','expression',3,'p_condition_conf','parse_condition.py',28),
  ('term -> term TIMES factor','term',3,'p_term_times','parse_calculation.py',29),
  ('term -> term DIVIDE factor','term',3,'p_term_div','parse_calculation.py',35),
  ('term -> factor','term',1,'p_term_factor','parse_calculation.py',40),
  ('factor -> NUMBER','factor',1,'p_factor_num','parse_calculation.py',45),
  ('expression -> print value','expression',2,'p_print','parse_print.py',46),
  ('factor -> ID','factor',1,'p_factor_id','parse_calculation.py',51),
  ('print -> PRINT','print',1,'p_print_print','parse_print.py',51),
  ('value -> STRING','value',1,'p_print_value','parse_print.py',56),
  ('factor -> TRUE','factor',1,'p_factor_bool','parse_calculation.py',58),
  ('factor -> FALSE','factor',1,'p_factor_bool','parse_calculation.py',59),
  ('value -> ID','value',1,'p_print_id','parse_print.py',61),
  ('value -> NUMBER','value',1,'p_print_number','parse_print.py',66),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parse_calculation.py',69),
]
